
A module that was compiled using NumPy 1.x cannot be run in
NumPy 2.0.2 as it may crash. To support both 1.x and 2.x
versions of NumPy, modules must be compiled with NumPy 2.0.
Some module may need to rebuild instead e.g. with 'pybind11>=2.12'.

If you are a user of the module, the easiest solution will be to
downgrade to 'numpy<2' or try to upgrade the affected module.
We expect that some modules will need time to support NumPy 2.

Traceback (most recent call last):  File "/share/u/can/additivity_training/scripts/training_sweep.py", line 2, in <module>
    import torch as t
  File "/share/u/can/miniconda3/envs/additivity_env/lib/python3.11/site-packages/torch/__init__.py", line 1382, in <module>
    from .functional import *  # noqa: F403
  File "/share/u/can/miniconda3/envs/additivity_env/lib/python3.11/site-packages/torch/functional.py", line 7, in <module>
    import torch.nn.functional as F
  File "/share/u/can/miniconda3/envs/additivity_env/lib/python3.11/site-packages/torch/nn/__init__.py", line 1, in <module>
    from .modules import *  # noqa: F403
  File "/share/u/can/miniconda3/envs/additivity_env/lib/python3.11/site-packages/torch/nn/modules/__init__.py", line 35, in <module>
    from .transformer import TransformerEncoder, TransformerDecoder, \
  File "/share/u/can/miniconda3/envs/additivity_env/lib/python3.11/site-packages/torch/nn/modules/transformer.py", line 20, in <module>
    device: torch.device = torch.device(torch._C._get_default_device()),  # torch.device('cpu'),
/share/u/can/miniconda3/envs/additivity_env/lib/python3.11/site-packages/torch/nn/modules/transformer.py:20: UserWarning: Failed to initialize NumPy: _ARRAY_API not found (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:84.)
  device: torch.device = torch.device(torch._C._get_default_device()),  # torch.device('cpu'),
Traceback (most recent call last):
  File "/share/u/can/additivity_training/scripts/training_sweep.py", line 10, in <module>
    from training import trainSAE
ModuleNotFoundError: No module named 'training'
